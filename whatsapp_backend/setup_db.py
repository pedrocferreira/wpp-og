#!/usr/bin/env python3
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'whatsapp_backend.settings')
django.setup()

from whatsapp.models import EvolutionConfig

def setup_database():
    """Configura a inst√¢ncia Evolution API no banco de dados"""
    
    print("üîç Verificando configura√ß√µes existentes...")
    
    # Verificar configura√ß√µes existentes
    configs = EvolutionConfig.objects.all()
    print(f"Total de configura√ß√µes: {configs.count()}")
    
    for config in configs:
        print(f"  - ID: {config.id}, Inst√¢ncia: {config.instance_id}, Ativa: {config.is_active}")
    
    # Criar ou atualizar configura√ß√£o para inst√¢ncia "Elo"
    config, created = EvolutionConfig.objects.get_or_create(
        instance_id='Elo',
        defaults={
            'api_key': '0891579bb8dda6a54deb403b0c01241c',
            'webhook_url': 'http://og-trk.xyz/api/whatsapp/webhook/evolution/',
            'is_active': True
        }
    )
    
    if created:
        print("‚úÖ Nova configura√ß√£o criada para inst√¢ncia 'Elo'!")
    else:
        print("‚úÖ Configura√ß√£o j√° existia para inst√¢ncia 'Elo'!")
        # Atualizar se necess√°rio
        config.api_key = '0891579bb8dda6a54deb403b0c01241c'
        config.webhook_url = 'http://og-trk.xyz/api/whatsapp/webhook/evolution/'
        config.is_active = True
        config.save()
        print("üîÑ Configura√ß√£o atualizada!")
    
    print(f"\nüìã Configura√ß√£o final:")
    print(f"   Inst√¢ncia: {config.instance_id}")
    print(f"   API Key: {config.api_key[:20]}...")
    print(f"   Webhook: {config.webhook_url}")
    print(f"   Ativa: {config.is_active}")
    
    # Desativar outras configura√ß√µes
    other_configs = EvolutionConfig.objects.exclude(id=config.id)
    if other_configs.exists():
        other_configs.update(is_active=False)
        print(f"üîï Desativadas {other_configs.count()} outras configura√ß√µes")
    
    print("\nüéâ Configura√ß√£o do banco de dados conclu√≠da!")
    return config

if __name__ == "__main__":
    try:
        setup_database()
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        import traceback
        traceback.print_exc() 